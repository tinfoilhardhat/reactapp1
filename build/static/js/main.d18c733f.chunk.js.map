{"version":3,"sources":["containers/Home/styles.js","containers/Home/index.js","containers/TodoList/components/TodoItem.js","containers/TodoList/components/FormInput.js","containers/TodoList/index.js","containers/CoolBoxes/components/CoolBoxAll.js","containers/CoolBoxes/components/CoolBoxActive.js","containers/CoolBoxes/index.js","containers/AboutMe/index.js","containers/BTSBoxes/index.js","App.js","index.js"],"names":["Title","styled","h1","Subtitle","Page","div","props","color","StyledLink","Link","Item","li","SuperButton","button","ShyButton","Input","input","TeleText","p","CoolButtonAll","CoolButtonActive","Home","name","to","TodoItem","idx","item","todos","setTodos","onClick","newTodos","slice","splice","FormInput","type","placeholder","value","setValue","onChange","e","target","TodoList","useState","newItem","setNewItem","map","newItems","push","CoolBoxAll","text","all","setAll","active","setActive","newAll","newActive","CoolBoxActive","CoolBoxes","id","JSON","stringify","alert","AboutMe","style","width","height","src","BTSBoxes","App","basename","className","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d18c733f.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Title = styled.h1`\r\n    color: #04D900;\r\n    font-style: bold;\r\n    font-size: 40pt;\r\n    font-family: monospace, monospace;\r\n`\r\nexport const Subtitle = styled(Title)`\r\n    margin: 2px;\r\n`\r\n\r\nexport const Page = styled.div`\r\n    background-color: ${props => props.color || \"#1E201E\"};\r\n    padding: 10px;\r\n    padding-top: 0px;\r\n`\r\n\r\nexport const StyledLink = styled(Link)`\r\n    color: #04D900;\r\n    font-style: bold underline;\r\n    font-family: monospace, monospace;\r\n\r\n`\r\nexport const Item = styled.li`\r\n    color: #04D900;\r\n    font-style: bold;\r\n    font-family: monospace, monospace;\r\n`\r\nexport const SuperButton = styled.button`\r\n    background-color: #028800;\r\n    color: #04D900;\r\n    font-family: monospace, monospace;\r\n    border: 1px double #025C00;\r\n`\r\n\r\nexport const ShyButton = styled.button`\r\n    background-color: #1E201E;\r\n    color: #028800;\r\n    font-family: monospace, monospace;\r\n    border: 4px double #028800;\r\n`\r\n\r\nexport const Input = styled.input`\r\n    background-color: #04D900;\r\n    color: black;\r\n    font-family: monospace, monospace;\r\n    border: 1px double #025C00;    \r\n`\r\n\r\nexport const TeleText = styled.p`\r\n    font-family: monospace, monospace;\r\n    color: #080;\r\n    margin: 0px;\r\n`\r\nexport const CoolButtonAll = styled.button`\r\n    font-family: monospace, monospace;\r\n    background-color: #080;\r\n    color: #04D900;\r\n    height: 60px;\r\n    width: 60px;\r\n    border: 1px double #025C00;\r\n    margin: 5px;\r\n\r\n    &:hover {\r\n        background-color: #0A0\r\n    }\r\n`\r\nexport const CoolButtonActive = styled.button`\r\n    font-family: monospace, monospace;\r\n    background-color: #04D900;\r\n    color: black;\r\n    height: 60px;\r\n    width: 60px;\r\n    border: 1px double #025C00;\r\n    margin: 5px;\r\n\r\n    &:hover {\r\n        background-color: white;\r\n    }\r\n`\r\n\r\nexport const ColorPage = styled.button`\r\n    background-color: #025C00;\r\n`","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Subtitle, Title, Page, StyledLink, TeleText } from './styles'\r\n\r\nconst Home = ({name}) => (\r\n  <Page>\r\n  <Subtitle>Welcome {name}</Subtitle>\r\n  <TeleText>If you're confused, you can visit the About Me below</TeleText>\r\n  <br/><br/>\r\n  <StyledLink to=\"/PROJ1\">TO-DO LIST</StyledLink>\r\n  <TeleText>Basic to-do list</TeleText>\r\n  <StyledLink to=\"/PROJ2\">BOXES</StyledLink>\r\n  <TeleText>Concept similar to the to-do list, but with boxes that can spell words</TeleText>\r\n  <StyledLink to=\"/PROJ3\">ABOUT ME</StyledLink>\r\n  <TeleText>The page that probably should've come before everything else</TeleText>\r\n  <StyledLink to=\"/PROJ4\">HOW I MADE: BOXES</StyledLink>\r\n  <TeleText>How I made the BOXES page on this site</TeleText>\r\n  </Page>\r\n\r\n)\r\n\r\nexport default Home","import React from 'react'\r\nimport { Item, ShyButton } from '../../Home/styles'\r\n\r\nconst TodoItem = ({idx, item, todos, setTodos}) => {\r\n\r\n  \r\n  const finishItem = () => {\r\n    /*alert(`TASK DONE`) it was getting quite annoying, no? */\r\n    let newTodos = todos.slice()\r\n    newTodos.splice(idx, 1)\r\n    setTodos(newTodos)\r\n  }\r\n  return (\r\n  <div>\r\n  <Item>{item}</Item>\r\n  <ShyButton onClick={finishItem}>DELETE</ShyButton>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport { Input } from '../../Home/styles'\r\nconst FormInput = ({ type, placeholder, value, setValue}) => {\r\n   return (\r\n    <Input type={type} placeholder={placeholder} value={value}\r\n    onChange={e => setValue(e.target.value)}/>\r\n   )\r\n}\r\n\r\nexport default FormInput","import React from 'react'\r\nimport TodoItem from './components/TodoItem'\r\nimport { Link } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport FormInput from './components/FormInput'\r\nimport { StyledLink, Page, Title, SuperButton, TeleText } from '../Home/styles'\r\nconst TodoList = () => {\r\n\r\n  const [todos, setTodos] = useState([\"Use the green text box below to type\", \"an entry, which can be added with the button below.\", \"Each item on the list can be deleted\", \"with the button immediately below it.\"])\r\n  const [newItem, setNewItem] = useState(\"\")\r\n\r\n  const addItem = () =>{\r\n    let newItems = todos.slice()\r\n    newItems.push(newItem);\r\n    setTodos(newItems)\r\n  }\r\n  return (\r\n  <Page>\r\n  <Title>TO-DO LIST</Title>\r\n  <TeleText>Basic to-do list made with React. </TeleText><br/><br/>\r\n  {todos.map((item, idx) => <TodoItem key={idx} idx={idx} item={item} todos={todos} setTodos={setTodos}/>)}<br/>\r\n  <FormInput type=\"text\" placeholder=\"TYPE ITEM HERE\" value={newItem} setValue={setNewItem}/><br/>\r\n  <SuperButton onClick={addItem}>ADD ITEM</SuperButton><br/><br/>\r\n  <StyledLink to=\"/\">RETURN TO HOME</StyledLink>\r\n  </Page>\r\n  )\r\n}\r\n\r\nexport default TodoList","import React from 'react'\r\nimport { CoolButtonAll } from '../../Home/styles'\r\n\r\nconst CoolBoxAll = ({idx, text, all, setAll, active, setActive}) => {\r\n\r\n    const all2active = () => {\r\n        /* remove selected box.*/\r\n        let newAll = all.slice()\r\n        newAll.splice(idx, 1)\r\n        setAll(newAll)\r\n        /* add box to active. */\r\n        let newActive = active.slice()\r\n        newActive.push(text);\r\n        setActive(newActive)\r\n    }\r\n    return (\r\n        <CoolButtonAll onClick={all2active}>{text}</CoolButtonAll>\r\n    )\r\n\r\n}\r\n\r\nexport default CoolBoxAll","import React from 'react'\r\nimport { CoolButtonActive } from '../../Home/styles'\r\n\r\nconst CoolBoxActive = ({idx, text, all, setAll, active, setActive}) => {\r\n\r\n    const active2all = () => {\r\n        /* remove selected box.*/\r\n        let newActive = active.slice()\r\n        newActive.splice(idx, 1)\r\n        setActive(newActive)\r\n        /* add box to all. */\r\n        let newAll = all.slice()\r\n        newAll.push(text);\r\n        setAll(newAll)\r\n    }\r\n    return (\r\n        <CoolButtonActive onClick={active2all}>{text}</CoolButtonActive>\r\n    )\r\n\r\n}\r\n\r\nexport default CoolBoxActive","import React from 'react' \r\nimport { Link } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport { Subtitle, Page, StyledLink, SuperButton, TeleText, Title, ShyButton } from '../Home/styles'\r\nimport CoolBoxAll from './components/CoolBoxAll'\r\nimport CoolBoxActive from './components/CoolBoxActive'\r\nconst CoolBoxes = () => {\r\n\r\n    const [all, setAll] = useState([\"E\", \"D\", \"A\", \"N\", \"L\", \"L\", \"W\", \"E\", \"U\", \"D\", \"I\", \"T\"])\r\n    const [active, setActive] = useState([\"R\", \"O\", \"Y\", \"G\", \"B\", \"I\", \"V\"])\r\n    let color = \"#1E201E\";\r\n    const resetBoxes = () => {\r\n        setAll([\"E\", \"D\", \"A\", \"N\", \"L\", \"L\", \"W\", \"E\", \"U\", \"D\", \"I\", \"T\"])\r\n        setActive([\"R\", \"O\", \"Y\", \"G\", \"B\", \"I\", \"V\"])\r\n    }\r\n    const applyBoxes = () => {\r\n        switch (JSON.stringify(active)) {\r\n            case JSON.stringify([\"R\", \"E\", \"D\"]):\r\n                color = \"#880000\"\r\n                alert(\"Made RED!\")\r\n                break;\r\n            case JSON.stringify([\"O\", \"R\", \"A\", \"N\", \"G\", \"E\"]):\r\n                color = \"#884400\"\r\n                alert(\"Made ORANGE!\")\r\n                break;\r\n            case JSON.stringify([\"Y\", \"E\", \"L\", \"L\", \"O\", \"W\"]):\r\n                color = \"#888800\"\r\n                alert(\"Made YELLOW!\")\r\n                break;\r\n            case JSON.stringify([\"G\", \"R\", \"E\", \"E\", \"N\"]):\r\n                color = \"#008800\"\r\n                alert(\"Made GREEN!\")\r\n                break;\r\n            case JSON.stringify([\"B\", \"L\", \"U\", \"E\"]):\r\n                color = \"#000088\"\r\n                alert(\"Made BLUE!\")\r\n                break;\r\n            case JSON.stringify([\"I\", \"N\", \"D\", \"I\", \"G\", \"O\"]):\r\n                color = \"#440088\"\r\n                alert(\"Made INDIGO!\")\r\n                break;\r\n            case JSON.stringify([\"V\", \"I\", \"O\", \"L\", \"E\", \"T\"]):\r\n                color = \"#880088\"\r\n                alert(\"Made VIOLET!\")\r\n                break;\r\n            default:\r\n                alert(\"Made nothing recognized.\")\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Page color={color}>\r\n            <Title>COOL BOXES</Title>\r\n            <TeleText>Cool boxes! Can you spell all the colors of the rainbow?</TeleText><br/><br/>\r\n            <div id=\"ALLBOXES\">\r\n                <Subtitle>ALL</Subtitle>\r\n                {all.map((text, idx) => <CoolBoxAll \r\n                key={idx} \r\n                idx={idx} text={text} \r\n                all={all} setAll={setAll}\r\n                active={active} setActive={setActive}/>\r\n                )}\r\n            </div>\r\n            \r\n            <div id=\"ACTIVEBOXES\">\r\n                <Subtitle>ACTIVE</Subtitle>\r\n                {active.map((text, idx) => <CoolBoxActive \r\n                key={idx} \r\n                idx={idx} text={text} \r\n                all={all} setAll={setAll}\r\n                active={active} setActive={setActive}/>\r\n                )}<br/>\r\n            </div>\r\n            \r\n            <br/>\r\n            <SuperButton onClick={applyBoxes}>SUBMIT</SuperButton><br/><br/>\r\n            <ShyButton onClick={resetBoxes}>RESET</ShyButton>\r\n            <br/>\r\n            <StyledLink to=\"/\">RETURN TO HOME</StyledLink>\r\n        </Page>\r\n\r\n    )\r\n}\r\n\r\nexport default CoolBoxes","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { Subtitle, Title, Page, StyledLink, TeleText } from '../Home/styles'\r\n\r\nconst AboutMe = () => {\r\n\r\n    return (\r\n        <Page>\r\n            <Subtitle>\r\n                ABOUT ME\r\n            </Subtitle>\r\n            <TeleText>\r\n                This page probably should've been made first\r\n            </TeleText>\r\n            <StyledLink to=\"/\">BACK TO HOME</StyledLink><br/>\r\n            <br/><br/><img style={{width: '1000px', height: '500px'}} src={\"https://i.ibb.co/JmtYstR/preview.png\"}/>\r\n            <br/><br/>\r\n            <TeleText>\r\n                My name is Robert and I've got a few hobbies. Some of them were used to create this website.\r\n                <br/>\r\n                I like to play games and make them, although I've had limited success with the second part.\r\n                <br/>\r\n                Some games I've played to 100% are FEZ, The Room, and Stick Fight: The Game.\r\n                <br/>\r\n                I also like to play Garry's Mod, Superfighters Deluxe, and Team Fortress 2.\r\n                <br/>\r\n                I know how to program best in Python, but I have also learned C++/C#, Java, and JavaScript.\r\n                <br/>\r\n                I have experience with HTML/CSS (manually writing it as well as using React).\r\n                <br/>\r\n                I've worked with some stranger languages in the past, but I haven't really used database tools much yet.\r\n                <br/>\r\n                I have experience with UI/UX design, but haven't done anything with it yet.\r\n                <br/>\r\n                I've programmed a few chatbots in JS and Python, but I'm still looking for a place to host them.\r\n                <br/>\r\n                (Yes, I wrote all the code in the image above. The panel in the middle displays code that was used to make this website.)\r\n            </TeleText>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default AboutMe","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Subtitle, Title, Page, StyledLink, TeleText } from '../Home/styles'\r\n\r\nconst BTSBoxes = () => {\r\n    return (\r\n        <Page>\r\n            <Subtitle>HOW I MADE: COOL BOXES</Subtitle>\r\n            <TeleText>(Assumption: You know what react.js is and the file structure of a react app)</TeleText><br/><br/>\r\n            <StyledLink to=\"/\">BACK TO HOME</StyledLink><br/>\r\n            <StyledLink to=\"/PROJ2\">CHECK OUT THE BOXES PROJECT HERE</StyledLink><br/><br/>\r\n            <img src=\"https://i.ibb.co/gPKJk2P/1.png\"/><br/>\r\n            <TeleText>I started by making two new styled components for the buttons that were active/inactive.</TeleText>\r\n            <TeleText>I used a hover modifier to show which button was moused over.</TeleText>\r\n            <br/>\r\n            <img src=\"https://i.ibb.co/S7BwP50/2.png\"/><br/>\r\n            <TeleText>In the main index.js file, I imported the two Box types (active and inactive), and used</TeleText>\r\n            <TeleText>two state variables to keep track of them. I probably should've named it \"inactive\" instead of \"all\".</TeleText>\r\n            <br/>\r\n            <img src=\"https://i.ibb.co/TgFJH88/3.png\"/><br/>\r\n            <TeleText>The CoolBoxActive and CoolBoxAll component files.</TeleText>\r\n            <br/>\r\n            <img src=\"https://i.ibb.co/vs0wMv2/4.png\"/><br/>\r\n            <TeleText>They look very similar because I copied and inverted one to make the other.</TeleText>\r\n            <TeleText>The all2active/active2all function in each modifies the state variables from</TeleText>\r\n            <TeleText>earlier, first removing the box from its current list and then putting it</TeleText>\r\n            <TeleText>into the list where it belongs.</TeleText>\r\n            <TeleText>If that looks familiar, that's because it is. I took it from the to-do list code.</TeleText>\r\n            <br/>\r\n            <img src=\"https://i.ibb.co/zsgspQ9/5.png\"/>\r\n            <TeleText>This code displays the boxes in their sections. It took me way too long to debug</TeleText>\r\n            <TeleText>this area because in an earlier version I forgot to switch every \"active\" out for \"all\".</TeleText>\r\n            <TeleText>The extra divs are not necessary, but it helped me organize the site while I was making it</TeleText>\r\n            <TeleText>and I decided to just keep it in.</TeleText>\r\n            <br/>\r\n            <img src=\"https://i.ibb.co/vqRdS72/6.png\"/><br/>\r\n            <TeleText>This makes the SUBMIT and RESET buttons. The RESET button's code is explained earlier</TeleText>\r\n            <TeleText>in this page, but the SUBMIT button was much harder to make.</TeleText>\r\n            <br/>\r\n            <img src=\"https://i.ibb.co/hZXnF8J/7.png\"/><br/>\r\n            <TeleText>This is some of the ugliest code I think I have ever written. However, it works.</TeleText>\r\n            <TeleText>The switch statement looks at what the active boxes spell out as a word. Then, it</TeleText>\r\n            <TeleText>runs through every case statement to find a match. The break keyword is needed because</TeleText>\r\n            <TeleText>a switch statement will run through as much of the code as possible, jumping from case</TeleText>\r\n            <TeleText>to case. The break keyword makes it so that when one case is run, the code skips the rest.</TeleText>\r\n            <br/>\r\n            <img src=\"https://i.ibb.co/QMFVj60/8.png\"/><br/>\r\n            <TeleText>Writing case statement is arguably some of the most tedious work in programming, but it works.</TeleText>\r\n            <TeleText>At the end, there's a bit of code called default. It normally runs no matter what at the</TeleText>\r\n            <TeleText>end of a switch statement, but thanks to all the breaks earlier, this only runs if none of</TeleText>\r\n            <TeleText>the cases get triggered.</TeleText>\r\n            <br/>\r\n            <TeleText>I did consider adding anything special if you typed in a real word that wasn't a color, like</TeleText>\r\n            <TeleText>READ or GONE, but I decided that was too much work after realizing how boring it was to make.</TeleText>\r\n            <TeleText>Also, originally I considered having the Page change color or display an image based on if a</TeleText>\r\n            <TeleText>word was put in (RED would make the background red). I kept running into trouble with this though,</TeleText>\r\n            <TeleText>and ultimately decided it would be a bit of an eyesore (also, typing in GREEN would've made</TeleText>\r\n            <TeleText>it impossible to read.)</TeleText><br/>\r\n            <StyledLink to=\"/\">BACK TO HOME</StyledLink><br/>\r\n        </Page>\r\n    )\r\n}\r\nexport default BTSBoxes","import React from 'react'\r\nimport Home from './containers/Home'\r\nimport TodoList from './containers/TodoList'\r\nimport CoolBoxes from './containers/CoolBoxes'\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\nimport { TeleText } from './containers/Home/styles';\r\nimport AboutMe from './containers/AboutMe'\r\nimport BTSBoxes from './containers/BTSBoxes'\r\nlet username = null;\r\n\r\nconst App = () => (\r\n  <BrowserRouter basename=\"HOME\">\r\n  \r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          {(username) ? <Home name={username}/> : <Home name=\"to the site\"/>}\r\n        </Route>\r\n        <Route path=\"/PROJ1\" /*component={TodoList}*/>\r\n          <TodoList/>\r\n        </Route>\r\n        <Route path=\"/PROJ2\">\r\n          <CoolBoxes/>\r\n        </Route>\r\n        <Route path=\"/PROJ3\">\r\n          <AboutMe/>\r\n        </Route>\r\n        <Route path=\"/PROJ4\">\r\n          <BTSBoxes/>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  </BrowserRouter>\r\n\r\n)\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}